#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyGames.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyGames")]
	public partial class DALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertMyAccount(MyAccount instance);
    partial void UpdateMyAccount(MyAccount instance);
    partial void DeleteMyAccount(MyAccount instance);
    partial void InsertWizard(Wizard instance);
    partial void UpdateWizard(Wizard instance);
    partial void DeleteWizard(Wizard instance);
    #endregion
		
		public DALDataContext() : 
				base(global::MyGames.DAL.Properties.Settings.Default.MyGamesConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MyAccount> MyAccount
		{
			get
			{
				return this.GetTable<MyAccount>();
			}
		}
		
		public System.Data.Linq.Table<Wizard> Wizard
		{
			get
			{
				return this.GetTable<Wizard>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MyAccount")]
	public partial class MyAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AccountId;
		
		private string _AccountName;
		
		private string _AccountPwd;
		
		private bool _IsOnline;
		
		private string _IP;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private EntityRef<Wizard> _Wizard;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountPwdChanging(string value);
    partial void OnAccountPwdChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    #endregion
		
		public MyAccount()
		{
			this._Wizard = default(EntityRef<Wizard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountPwd
		{
			get
			{
				return this._AccountPwd;
			}
			set
			{
				if ((this._AccountPwd != value))
				{
					this.OnAccountPwdChanging(value);
					this.SendPropertyChanging();
					this._AccountPwd = value;
					this.SendPropertyChanged("AccountPwd");
					this.OnAccountPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MyAccount_Wizard", Storage="_Wizard", ThisKey="AccountId", OtherKey="AccountId", IsUnique=true, IsForeignKey=false)]
		public Wizard Wizard
		{
			get
			{
				return this._Wizard.Entity;
			}
			set
			{
				Wizard previousValue = this._Wizard.Entity;
				if (((previousValue != value) 
							|| (this._Wizard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wizard.Entity = null;
						previousValue.MyAccount = null;
					}
					this._Wizard.Entity = value;
					if ((value != null))
					{
						value.MyAccount = this;
					}
					this.SendPropertyChanged("Wizard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wizard")]
	public partial class Wizard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WizardId;
		
		private System.Guid _AccountId;
		
		private string _WizardName;
		
		private System.Nullable<int> _WizardLevel;
		
		private System.Nullable<int> _CurrentXP;
		
		private System.Nullable<int> _MaxXP;
		
		private System.Nullable<int> _CurrentStamina;
		
		private System.Nullable<int> _MaxStamina;
		
		private System.Nullable<int> _Race;
		
		private System.Nullable<int> _Professional;
		
		private System.Nullable<int> _Sex;
		
		private System.Nullable<int> _Gold;
		
		private System.Nullable<int> _Silver;
		
		private System.Nullable<int> _Copper;
		
		private System.Nullable<int> _VIPLevel;
		
		private System.Nullable<int> _Money;
		
		private EntityRef<MyAccount> _MyAccount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWizardIdChanging(System.Guid value);
    partial void OnWizardIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnWizardNameChanging(string value);
    partial void OnWizardNameChanged();
    partial void OnWizardLevelChanging(System.Nullable<int> value);
    partial void OnWizardLevelChanged();
    partial void OnCurrentXPChanging(System.Nullable<int> value);
    partial void OnCurrentXPChanged();
    partial void OnMaxXPChanging(System.Nullable<int> value);
    partial void OnMaxXPChanged();
    partial void OnCurrentStaminaChanging(System.Nullable<int> value);
    partial void OnCurrentStaminaChanged();
    partial void OnMaxStaminaChanging(System.Nullable<int> value);
    partial void OnMaxStaminaChanged();
    partial void OnRaceChanging(System.Nullable<int> value);
    partial void OnRaceChanged();
    partial void OnProfessionalChanging(System.Nullable<int> value);
    partial void OnProfessionalChanged();
    partial void OnSexChanging(System.Nullable<int> value);
    partial void OnSexChanged();
    partial void OnGoldChanging(System.Nullable<int> value);
    partial void OnGoldChanged();
    partial void OnSilverChanging(System.Nullable<int> value);
    partial void OnSilverChanged();
    partial void OnCopperChanging(System.Nullable<int> value);
    partial void OnCopperChanged();
    partial void OnVIPLevelChanging(System.Nullable<int> value);
    partial void OnVIPLevelChanged();
    partial void OnMoneyChanging(System.Nullable<int> value);
    partial void OnMoneyChanged();
    #endregion
		
		public Wizard()
		{
			this._MyAccount = default(EntityRef<MyAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WizardId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WizardId
		{
			get
			{
				return this._WizardId;
			}
			set
			{
				if ((this._WizardId != value))
				{
					this.OnWizardIdChanging(value);
					this.SendPropertyChanging();
					this._WizardId = value;
					this.SendPropertyChanged("WizardId");
					this.OnWizardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MyAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WizardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WizardName
		{
			get
			{
				return this._WizardName;
			}
			set
			{
				if ((this._WizardName != value))
				{
					this.OnWizardNameChanging(value);
					this.SendPropertyChanging();
					this._WizardName = value;
					this.SendPropertyChanged("WizardName");
					this.OnWizardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WizardLevel", DbType="Int")]
		public System.Nullable<int> WizardLevel
		{
			get
			{
				return this._WizardLevel;
			}
			set
			{
				if ((this._WizardLevel != value))
				{
					this.OnWizardLevelChanging(value);
					this.SendPropertyChanging();
					this._WizardLevel = value;
					this.SendPropertyChanged("WizardLevel");
					this.OnWizardLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentXP", DbType="Int")]
		public System.Nullable<int> CurrentXP
		{
			get
			{
				return this._CurrentXP;
			}
			set
			{
				if ((this._CurrentXP != value))
				{
					this.OnCurrentXPChanging(value);
					this.SendPropertyChanging();
					this._CurrentXP = value;
					this.SendPropertyChanged("CurrentXP");
					this.OnCurrentXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxXP", DbType="Int")]
		public System.Nullable<int> MaxXP
		{
			get
			{
				return this._MaxXP;
			}
			set
			{
				if ((this._MaxXP != value))
				{
					this.OnMaxXPChanging(value);
					this.SendPropertyChanging();
					this._MaxXP = value;
					this.SendPropertyChanged("MaxXP");
					this.OnMaxXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStamina", DbType="Int")]
		public System.Nullable<int> CurrentStamina
		{
			get
			{
				return this._CurrentStamina;
			}
			set
			{
				if ((this._CurrentStamina != value))
				{
					this.OnCurrentStaminaChanging(value);
					this.SendPropertyChanging();
					this._CurrentStamina = value;
					this.SendPropertyChanged("CurrentStamina");
					this.OnCurrentStaminaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxStamina", DbType="Int")]
		public System.Nullable<int> MaxStamina
		{
			get
			{
				return this._MaxStamina;
			}
			set
			{
				if ((this._MaxStamina != value))
				{
					this.OnMaxStaminaChanging(value);
					this.SendPropertyChanging();
					this._MaxStamina = value;
					this.SendPropertyChanged("MaxStamina");
					this.OnMaxStaminaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="Int")]
		public System.Nullable<int> Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Professional", DbType="Int")]
		public System.Nullable<int> Professional
		{
			get
			{
				return this._Professional;
			}
			set
			{
				if ((this._Professional != value))
				{
					this.OnProfessionalChanging(value);
					this.SendPropertyChanging();
					this._Professional = value;
					this.SendPropertyChanged("Professional");
					this.OnProfessionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int")]
		public System.Nullable<int> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gold", DbType="Int")]
		public System.Nullable<int> Gold
		{
			get
			{
				return this._Gold;
			}
			set
			{
				if ((this._Gold != value))
				{
					this.OnGoldChanging(value);
					this.SendPropertyChanging();
					this._Gold = value;
					this.SendPropertyChanged("Gold");
					this.OnGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silver", DbType="Int")]
		public System.Nullable<int> Silver
		{
			get
			{
				return this._Silver;
			}
			set
			{
				if ((this._Silver != value))
				{
					this.OnSilverChanging(value);
					this.SendPropertyChanging();
					this._Silver = value;
					this.SendPropertyChanged("Silver");
					this.OnSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copper", DbType="Int")]
		public System.Nullable<int> Copper
		{
			get
			{
				return this._Copper;
			}
			set
			{
				if ((this._Copper != value))
				{
					this.OnCopperChanging(value);
					this.SendPropertyChanging();
					this._Copper = value;
					this.SendPropertyChanged("Copper");
					this.OnCopperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIPLevel", DbType="Int")]
		public System.Nullable<int> VIPLevel
		{
			get
			{
				return this._VIPLevel;
			}
			set
			{
				if ((this._VIPLevel != value))
				{
					this.OnVIPLevelChanging(value);
					this.SendPropertyChanging();
					this._VIPLevel = value;
					this.SendPropertyChanged("VIPLevel");
					this.OnVIPLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Int")]
		public System.Nullable<int> Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MyAccount_Wizard", Storage="_MyAccount", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public MyAccount MyAccount
		{
			get
			{
				return this._MyAccount.Entity;
			}
			set
			{
				MyAccount previousValue = this._MyAccount.Entity;
				if (((previousValue != value) 
							|| (this._MyAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MyAccount.Entity = null;
						previousValue.Wizard = null;
					}
					this._MyAccount.Entity = value;
					if ((value != null))
					{
						value.Wizard = this;
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(System.Guid);
					}
					this.SendPropertyChanged("MyAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
